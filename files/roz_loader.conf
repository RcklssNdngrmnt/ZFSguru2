#
## ZFSguru loader.conf
## Root-on-ZFS distribution
#

## KERNEL MEMORY
#
# Warning: comments below apply to FreeBSD 8.x systems, not to 9.x or higher!
# Kernel memory is what ZFS uses and thus tuning this parameter may be useful.
# General recommendation is to set this variable at 1.5 times your RAM size,
# leaving the _max variable untouched.
# Example: if you have 4GiB RAM, then set the kmem_size to "6g" instead.
#
# if you exceed the limits of kernel memory, you may get a panic like this:
# panic: kmem_malloc(131072): kmem_map too small: <totalkmem> total allocated
# this would be a sign you have memory tuning to do, or add physical RAM instead
#
#vm.kmem_size="6g"
#vm.kmem_size_max="512g"


## ZFS tunables

# ARC limits
# tune these in according with vm.kmem_size setting; you can increase it
# up to the value of vm.kmem_size minus 1GB.
#
# note: kernel memory size needs to be larger than maximum ARC size (arc_max)
# note: zfs uses more memory than just the ARC; don't make the ARC too big
#
#vfs.zfs.arc_min="512m"
#vfs.zfs.arc_max="1g"

# ARC metadata limits
# increase to cache more metadata (recommended if you have enough RAM)
#vfs.zfs.arc_meta_limit="128m"

# ZFS prefetch disable
# setting this value to 0 will force prefetching to be used even when
# ZFS considers it undesirable if you have <= 4GiB RAM or running 32-bit
#vfs.zfs.prefetch_disable="0"

# ZFS transaction groups (txg)
# ZFS is not unlike a transactional database in the sense that it processes
# your data in transaction groups. The bigger the txg is, the more data it
# can hold but also the longer flushing transaction groups will take.
# experiment with these values to improve temporary 'lags' or 'hangs' 
# synctime_ms: target milliseconds a txg will be synced (tune this!)
#vfs.zfs.txg.synctime_ms="1000"
# timeout: maximum number of seconds a txg will be synced (tune this!)
#vfs.zfs.txg.timeout="10"

# vdev cache settings
# should be safe to tune; but be careful about your memory limits
#vfs.zfs.vdev.cache.bshift="16"
#vfs.zfs.vdev.cache.size="10m"
#vfs.zfs.vdev.cache.max="16384"

# vdev pending requests
# this manages the minimum/maximum of outstanding I/Os on the vdevs
# this should be safe to tune; best setting depends on your disks
# ssds may prefer higher settings
# on some systems, setting both to 1 will improve sequential I/O
#vfs.zfs.vdev.min_pending="4"
#vfs.zfs.vdev.max_pending="32"

# other vdev settings
# I/O requests are aggregated up to this size
#vfs.zfs.vdev.aggregation_limit="131072"
# exponential I/O issue ramp-up rate
#vfs.zfs.vdev.ramp_rate="2"
# used for calculating I/O request deadline
#vfs.zfs.vdev.time_shift="6"

# disable BIO flushes - FOR PERFORMANCE TESTING ONLY
# disables metadata sync mode and uses async I/O without flushes
#vfs.zfs.cache_flush_disable="1"
#vfs.zfs.vdev.bio_flush_disable="1"

# disable ZIL (ZFS Intent Log) replay - EXPERT USAGE ONLY
#vfs.zfs.zil_replay_disable="1"


## other tuning
kern.maxfiles="950000"
# fix for error 'swap zone exhausted, increase kern.maxswzone'
kern.maxswzone="512m"
# fix for ESXi users (only use if you have problems booting or finding disks)
#hw.pci.enable_msix="0"
#hw.pci.enable_msi="0"
# fix for AOC-SAT2-MV8 (Marvell) controllers
hw.hptrr.attach_generic="0"
# fix for USB Root-on-ZFS that do not shutdown properly
hw.usb.no_shutdown_wait=1
# quicker boot time by shortening boot menu countdown
autoboot_delay="2"
# delay booting to allow some devices to settle (needed for some systems)
#kern.cam.boot_delay="10000"
# disable id labels
kern.geom.label.gptid.enable="0"
kern.geom.label.ufsid.enable="0"
# disable legacy device mappings (ada->ad)
kern.cam.ada.legacy_aliases="0"

## mandatory kernel modules (REQUIRED)
zfs_load="YES"
geom_uzip_load="YES"

## recommended kernel modules
# ahci (TRIM capable) driver
ahci_load="YES"
# package filter firewall
pf_load="YES"
# asynchronous I/O kernel module
aio_load="YES"

## para-virtualization support
# feel free to disable if this system is not going to be virtualized
virtio_load="YES"
virtio_pci_load="YES"
virtio_blk_load="YES"
virtio_balloon_load="YES"
if_vtnet_load="YES"

## optional kernel modules
# silicon image driver
siis_load="YES"
# mps: MPT Fusion 2 LSI SAS 6Gbps controller driver
# should be enabled in kernel
#mps_load="YES"
# padlock: VIA CPU-accelerated AES engine
#padlock_load="YES"
# aesni: Intel Core AES engine
#aesni_load="YES"
# following may be used in the future
#tmpfs_load="YES"
#geom_md_load="YES"
#nullfs_load="YES"
#unionfs_load="YES"

## optional DIPM power saving
# enables DIPM per AHCI channel - can save power even with no disks attached
# warning: Device-Initiated Power Management (DIPM) is not compatible with
# presence detection, so hot swapping won't work. You need to manually reset
# the AHCI bus or simply restart ZFSguru.
# Be careful enabling this; some SSDs do not properly support it, even though
# they claim to.
# To find out on what channel your disks reside, use this command:
# dmesg | grep ahcich
#hint.ahcich.0.pm_level="5"
#hint.ahcich.1.pm_level="5"
#hint.ahcich.2.pm_level="5"
#hint.ahcich.3.pm_level="5"
#hint.ahcich.4.pm_level="5"
#hint.ahcich.5.pm_level="5"
#hint.ahcich.6.pm_level="5"
#hint.ahcich.7.pm_level="5"
#hint.ahcich.8.pm_level="5"
#hint.ahcich.9.pm_level="5"

## optional power saving settings
# lower kernel frequency from 1000 to 100 times a second (danger!)
#kern.hz="100"
# disable ACPI CPU frequency throttling (better performance, higher idle power)
#hint.p4tcc.0.disabled="1"
#hint.acpi_throttle.0.disabled="1"

# do not power devices that have no FreeBSD driver attached to them
# note: to use this effectively, you must recompile a custom kernel with only
# the drivers enabled you want to be functional, leaving the others without
# driver and also without power.
hw.pci.do_power_nodriver="3"

# end #
